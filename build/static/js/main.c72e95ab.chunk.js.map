{"version":3,"sources":["components/devices/AddDevice.jsx","actions/deviceActions.js","components/devices/Check.jsx","components/devices/Device.jsx","components/devices/Devices.jsx","components/dashboard/Dashboard.jsx","components/layout/NavItems.jsx","actions/authAction.js","components/layout/NavBar.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/auth/Info.js","components/auth/Settings.jsx","components/devices/Light.jsx","components/auth/DefaultDevices.jsx","App.js","Reducers/deviceReducer.js","Reducers/authReducer.js","Reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["AddDevice","state","device","checked","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","addDevice","document","getElementById","reset","console","log","className","autoComplete","style","marginTop","onSubmit","this","htmlFor","type","onChange","Component","connect","dispatch","getState","getFirebase","firestore","collection","add","date","Date","then","catch","err","Check","onClick","cursor","removeDevice","doc","delete","toggleChecked","set","merge","moment","toDate","calendar","handleCheck","handleRemove","compose","devices","ordered","firestoreConnect","ownProps","orderBy","scope","map","uid","firebase","auth","to","signOut","SignIn","email","password","signIn","creds","signInWithEmailAndPassword","SignUp","signUp","createUserWithEmailAndPassword","Info","Carousel","Item","src","alt","Caption","Settings","Light","DefaultDevices","width","href","App","path","component","Dashboard","deviceReducer","action","toast","success","error","warn","info","authReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","height","role","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c72e95ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { addDevice } from '../../actions/deviceActions';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddDevice extends Component {\r\n    state = {\r\n        device: \" \",\r\n        checked: \"false\"\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addDevice(this.state);\r\n        document.getElementById(\"addDeviceForm\").reset();\r\n        console.log(this.state);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form\r\n                    id=\"addDeviceForm\"\r\n                    className=\"container\"\r\n                    autoComplete=\"off\"\r\n                    style={{ marginTop: \"38px\" }}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <legend> {\" \"}<h4> </h4> </legend>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"device\" className =\"text-light\">Add a device:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"device\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\"> Add </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addDevice: device => dispatch(addDevice(device))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddDevice);","export const addDevice = device => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firestore = getFirebase().firestore();        \r\n        firestore\r\n            .collection(\"devices\")\r\n            .add({\r\n                ...device,\r\n                date: new Date()\r\n            })\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"ADD_DEVICE\",\r\n                    device\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"ADD_DEVICE_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const removeDevice = device => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firestore = getFirebase().firestore();\r\n        firestore\r\n            .collection(\"devices\")\r\n            .doc(device.id)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"REMOVE_DEVICE\"\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"REMOVE_DEVICE_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const toggleChecked = (device) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firestore = getFirebase().firestore();\r\n  \r\n      firestore\r\n        .collection(\"devices\")\r\n        .doc(device.id)\r\n        .set(\r\n          {\r\n            ...device,\r\n            checked: !device.checked,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          dispatch({\r\n            type: \"TOGGLE_CHECKED\",\r\n            device,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispatch({\r\n            type: \"TOGGLE_CHECKED_ERR\",\r\n            err,\r\n          });\r\n        });\r\n    };\r\n  };","import React from 'react';\r\n\r\nconst Check = ({ checked, onClick }) => {\r\n  if (checked === true) {\r\n    return (\r\n      <span\r\n        className=\"material-icons text-success\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={onClick}\r\n      >\r\n        check_circle_outline\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        className=\"material-icons text-muted\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={onClick}\r\n      >\r\n        check_circle_outline\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Check;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { removeDevice } from '../../actions/deviceActions';\r\nimport { connect } from 'react-redux';\r\nimport Check from './Check';\r\nimport { toggleChecked } from '../../actions/deviceActions';\r\n\r\nconst Device = ({ device, removeDevice, toggleChecked }) => {\r\n\r\n    const handleRemove = (device) => {\r\n        removeDevice(device);\r\n    };\r\n\r\n    const handleCheck = (device) => {\r\n        toggleChecked(device);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <th>{device.device}</th>\r\n                <td>{moment(device.date.toDate()).calendar()}</td>\r\n                <td>\r\n                    <Check onClick={() => handleCheck(device)} checked={device.checked} />\r\n                </td>\r\n                <td>\r\n                    <span\r\n                        className=\"material-icons text-danger\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleRemove(device)}\r\n                    >\r\n                        delete\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeDevice: device => dispatch(removeDevice(device)),\r\n        toggleChecked: device => dispatch(toggleChecked(device))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Device);","import React from 'react';\r\nimport Device from './Device';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nconst Devices = ({devices}) => {\r\n    return (\r\n        <>\r\n            <table className=\"table table-dark container\" style={{ marginTop: \"30px\" }}>\r\n                <thead>\r\n                    <tr className=\"text-info\">\r\n                        <th scope=\"col\">Devices</th>\r\n                        <th scope=\"col\">Added On</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {devices && devices.map(device=> <Device device = {device} key = {device.id}/>)}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const devices = state.firestore.ordered.devices;\r\n    return {\r\n        devices: devices,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((ownProps) => [\r\n        {\r\n            collection: \"devices\",\r\n            orderBy: [\"date\", \"desc\"],\r\n        },\r\n    ])\r\n)(Devices);","import React from 'react';\r\nimport AddDevice from 'components/devices/AddDevice';\r\nimport Devices from 'components/devices/Devices';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Dashboard = ({uid}) => {\r\n    if (!uid) return <Redirect to =\"/signin\"/>\r\n    return (\r\n        <>\r\n            <AddDevice />\r\n            <Devices />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n        uid: uid,\r\n    };\r\n};\r\n\r\nexport default connect (mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOut} from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavItems = ({ signOut, uid }) => {\r\n    if (uid) {\r\n        return (\r\n            <>\r\n                <Link to=\"/signin\" className=\"nav-link\" onClick={signOut}>\r\n                    Sign Out\r\n                </Link>\r\n                \r\n                <Link to=\"/defaultdevices\" className=\"nav-link\">\r\n                   Default Devices\r\n                </Link>\r\n\r\n                <Link to=\"/settings\" className=\"nav-link\">\r\n                    Settings\r\n                </Link>\r\n            </>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <Link to=\"/signup\" className=\"nav-link\">\r\n                    Sign Up\r\n                </Link>\r\n\r\n                <Link to=\"/signin\" className=\"nav-link\">\r\n                    Sign In\r\n                </Link>\r\n\r\n                <Link to=\"/info\" className=\"nav-link\">\r\n                    Info\r\n                </Link>\r\n\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const uid = state.firebase.auth.uid\r\n    return {\r\n        uid: uid\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavItems);","export const signIn = creds => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n          dispatch({ type: \"SIGN_IN\" });\r\n        })\r\n        .catch(err => {\r\n          dispatch({ type: \"SIGN_IN_ERR\" }, err);\r\n        });\r\n    };\r\n  };\r\n\r\n  export const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          dispatch({ type: \"SIGN_OUT\" });\r\n        });\r\n    };\r\n  };\r\n\r\n  export const signUp = creds => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n          dispatch({ type: \"SIGN_UP\" });\r\n        })\r\n        .catch(err => {\r\n          dispatch({ type: \"SIGN_UP_ERR\" }, err);\r\n        });\r\n    };\r\n  };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavItems from './NavItems';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <nav className='navbar navbar-light bg-light justify-content-center'>\r\n                <Link to='/' className='navbar-brand'>\r\n                    <h3 > Control Panel </h3>\r\n                </Link>\r\n                <NavItems />\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react';\r\nimport { signIn } from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \" \",\r\n        password: \" \",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signIn(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { uid } = this.props;\r\n        if (uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <>\r\n                <form\r\n                    className=\"container\"\r\n                    autoComplete=\"off\"\r\n                    style={{ marginTop: \"38px\" }}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <legend> <h4 className =\"text-light\"> Sign In </h4> </legend>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email \" className = \"text-light\">Enter Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className = \"text-light\">Enter Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\"> Sign In </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    const uid = state.firebase.auth.uid\r\n    return {\r\n        uid: uid\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { signUp } from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signUp(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { uid } = this.props;\r\n        if (uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <>\r\n                <form\r\n                    className=\"container\"\r\n                    autoComplete=\"off\"\r\n                    style={{ marginTop: \"38px\" }}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <legend> \r\n                        {\" \"}\r\n                        <h4 className =\"text-light\"> Sign Up </h4> \r\n                    </legend>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className =\"text-light\">Enter Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className =\"text-light\">Enter Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\"> Sign Up </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    const uid = state.firebase.auth.uid\r\n    return {\r\n        uid: uid,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nclass Info extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3 className=\"text-light font-italic text-center\">\r\n                    Курсовой проект по теме: \"Разработка одностраничного веб-приложения\". Предметная область: разработка панели управления умным домом.  Панель управления умным домом предусматривает добавление устройства при помощи кнопки \"ADD\" с добавлением его в базу данных Firebase.\r\n                    Данное приложение разработано студентом гр.УТб-4301-02-00 Смольниковой Ириной Алексеевной.\r\n                </h3>\r\n                <div className=\"container slide\">\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"https://media.istockphoto.com/photos/smart-home-automation-remote-control-internet-technology-picture-id1014664366?k=6&m=1014664366&s=612x612&w=0&h=1WYia7a_DG0F3VXCyio8G3i4fkxQA9ONGo1DAQmTBo0=\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Smart Home</h3>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"https://i.pinimg.com/originals/59/54/b4/5954b408c66525ad932faa693a647e3f.jpg\"\r\n                                alt=\"Second slide\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3>Second slide label</h3>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"https://sun9-10.userapi.com/impf/XveLNzXhStaH50BGz1mIkSsYabDJTMls46hGsA/SNVRR3NSOSA.jpg?size=899x766&quality=96&proxy=1&sign=bf5452924340fea725a5948a4abea2b0&type=album\"\r\n                                alt=\"Third slide\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3>Third slide label</h3>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <>\r\n            <h3 className=\"header text-light\">SETTINGS</h3>\r\n            <p className = \"text-light\"> Here you can do...</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\n\r\nclass Light extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <>\r\n            <h3> Light!</h3>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Light;","import React from 'react';\r\nimport Light from '../devices/Light';\r\n\r\nconst DefaultDevices = () => {\r\n    return (\r\n        <>\r\n        <h3 className=\"header text-warning text-center\">DEFAULT DEVICES</h3>\r\n            <div className=\"card-group dashboard-container\">\r\n                <div className=\"card border-primary mb-3\" style={{ width: \"9rem\" }}>\r\n                <img className=\"card-img-top\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSO8uFxrUDGCZiNyYZYx8LS0Ul2eIMJ-e-FuQ&usqp=CAU\"  ></img>\r\n                    <div className=\"card-body text-primary justify-content-between\">\r\n                        <h5 className=\"card-title text-center text-dark\">Освещение</h5>\r\n                        <p className=\"card-text text-center\">Превратите любой свет в интеллектуальный свет и интеллектуально управляйте такими интеллектуальными осветительными приборами, как Philips Hue, LIFX, Lutron и другими. Данная система управляет осветительными приборами, которые работают в зависимости от действий человека: уход из дома, возвращение домой и др.</p>\r\n                        <p className=\"card-text\"><small className=\"text-dark\">Last updated 3 months ago</small></p> \r\n                        <a href=\"/defaultdevices/light\" className=\"btn btn-primary\" onClick={Light}>Go somewhere</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card border-primary mb-3\" style={{ width: \"9rem\" }}>\r\n                <img className=\"card-img-top\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTVvPyZoH-JFIH39VrwNDhwcv62wxWedI6tjw&usqp=CAU\" ></img>\r\n                    <div className=\"card-body text-primary\">\r\n                        <h5 className=\"card-title text-center text-dark\">Температура</h5>\r\n                        <p className=\"card-text text-center\">Устанавливайте температуру в доме с помощью специальных термостатов от любого устройства панели управления. Умный датчик температуры устанавливается в зонах, где необходимо управлять климатом. Вы можете контролировать температуру со смартфона и получать уведомления в случае резкого снижения или повышения температуры.</p>\r\n                        <p className=\"card-text\"><small className=\"text-dark\">Last updated 2 weeks ago</small></p>\r\n                        <a href=\"/defaultdevices/manage-inputs\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card border-primary mb-3\" style={{ width: \"9rem\" }}>\r\n                <img className=\"card-img-top\" src=\"https://media.istockphoto.com/vectors/humidity-icon-vector-id1277328164?b=1&k=6&m=1277328164&s=612x612&w=0&h=_iEBgXyExIbpmPzaDwk2fVOpOx8jrw0twGncsSr90Ks=\" ></img>\r\n                    <div className=\"card-body text-primary\">\r\n                        <h5 className=\"card-title text-center text-dark\">Влажность</h5>\r\n                        <p className=\"card-text text-center\">Автоматизируйте управление микроклиматом при помощи специального датчика температуры и влажности. Он предусматривает автоматическое включение кондиционера, когда становится жарко, или включение увлажнителя, когда воздух слишком сухой. Идеальная относительная влажность для здоровья и комфорта составляет от 40% до 60%.</p>\r\n                        <p className=\"card-text\"><small className=\"text-dark\">Last updated 7 months ago</small></p>\r\n                        <a href=\"/defaultdevices/manage-pests\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card border-primary mb-3\" style={{ width: \"9rem\" }}>\r\n                <img className=\"card-img-top\" src=\"https://i.pinimg.com/originals/f2/e6/c4/f2e6c47863bee2a24880a4b692ac2929.jpg\" ></img>\r\n                    <div className=\"card-body text-primary\">\r\n                        <h5 className=\"card-title text-center text-dark\">Музыка</h5>\r\n                        <p className=\"card-text text-center\">Загружайте свою любимую музыку и плейлисты и позвольте каждому в доме управлять аудиосистемой. Данная аудиосистема позволяет слушать любимую музыку или радио в нескольких комнатах как по отдельности, так и одновременно. При этом управление системой осуществляется при помощи смартфона или компьютера.</p>\r\n                        <p className=\"card-text\"><small className=\"text-dark\">Last updated 1 min ago</small></p>\r\n                        <a href=\"/defaultdevices/manage-diseases\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DefaultDevices;","import Dashboard from 'components/dashboard/Dashboard';\nimport NavBar from 'components/layout/NavBar';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Info from './components/auth/Info';\nimport Settings from './components/auth/Settings';\nimport DefaultDevices from './components/auth/DefaultDevices';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'App.css';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <ToastContainer />\n        <NavBar />\n        <Switch>\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/info' component={Info} />\n          <Route path='/defaultdevices' component={DefaultDevices} />\n          <Route path='/settings' component={Settings} />\n          <Route path='/' component={Dashboard} />  \n        </Switch>\n      </BrowserRouter>\n    </>\n  )\n}\n\nexport default App;\n","import { toast} from 'react-toastify';\r\n\r\nconst deviceReducer = (state ={}, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_DEVICE\":{\r\n            toast.success(\"Added a device\")\r\n            return state\r\n        }\r\n\r\n        case \"ADD_DEVICE_ERR\":{\r\n            toast.error(\"An error occurred\")\r\n            return state\r\n        }\r\n        case \"REMOVE_DEVICE\":{\r\n            toast.warn(\"A device was removed...\")\r\n            return state\r\n        }\r\n\r\n        case \"REMOVE_DEVICE_ERR\":{\r\n            toast.error(\"A device remove error occured...\")\r\n            return state\r\n        }\r\n\r\n        case \"TOGGLE_CHECKED\": {\r\n            toast.info(\"A device status changed...\");\r\n            return state;\r\n          }\r\n          case \"TOGGLE_CHECKED_ERR\": {\r\n            toast.error(\"A device status change error occured...\");\r\n            return state;\r\n          }\r\n          \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default deviceReducer;","import { toast } from \"react-toastify\";\r\n\r\nconst authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"SIGN_IN\":\r\n            toast(\"Welcome back..\");\r\n            return state;\r\n\r\n        case \"SIGN_IN_ERR\":\r\n            toast.error(\"Sign in error...\");\r\n            return state;\r\n\r\n        case \"SIGN_OUT\":\r\n            toast(\"You signed out..\");\r\n            return state;\r\n\r\n        case \"SIGN_UP\":\r\n            toast(\"Welcome..\");\r\n            return state;\r\n\r\n        case \"SIGN_UP_ERR\":\r\n            toast.error(\"Sign up error...\");\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {combineReducers} from 'redux';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport deviceReducer from './deviceReducer';\r\nimport authReducer from './authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    device: deviceReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCC4LAXFHNLWv0aH-b8A2q__lkxmt0d2NI\",\r\n    authDomain: \"todo-app-56f0e.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-56f0e.firebaseio.com\",\r\n    projectId: \"todo-app-56f0e\",\r\n    storageBucket: \"todo-app-56f0e.appspot.com\",\r\n    messagingSenderId: \"19088898980\",\r\n    appId: \"1:19088898980:web:dba5f8d350b8fc3efb5f31\",\r\n    measurementId: \"G-TN7XGE7MV0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './Reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport firebase from 'config/firebaseConfig'\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk.withExtraArgument({ getFirebase }))\n);\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"text-center\">\n        <div\n          className=\"spinner-grow text-primary\"\n          style={{ width: \"7rem\", height: \"7rem\" }}\n          role=\"status\"\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  return children;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}